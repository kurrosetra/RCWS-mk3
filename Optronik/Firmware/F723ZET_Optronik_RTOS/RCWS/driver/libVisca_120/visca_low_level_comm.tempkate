/*
 * visca_low_level_comm.c
 *
 *  Created on: Dec 30, 2021
 *      Author: miftakur
 */

#include "visca.h"

#if DEBUG_VISCA==1
#include <stdio.h>
#endif	//if DEBUG_VISCA==1

/********************************/
/*      PRIVATE FUNCTIONS       */
/********************************/
uint32_t _VISCA_write_packet_data(VISCAInterface_t *iface, VISCACamera_t *camera,
		VISCAPacket_t *packet)
{
	HAL_UART_Transmit(iface->port_fd, packet->bytes, packet->length, VISCA_SERIAL_WAIT);

#if DEBUG_VISCA==1
	printf("send: ");
	for ( int i = 0; i < packet->length; i++ ) {
		printf("[%02X] ", packet->bytes[i]);
	}
	printf("\r\n");
#endif	//if DEBUG_VISCA==1

	return VISCA_SUCCESS;
}

uint32_t _VISCA_get_packet(VISCAInterface_t *iface)
{
	uint32_t pos = 0;
	uint32_t timer = HAL_GetTick() + VISCA_SERIAL_WAIT;

#if DEBUG_VISCA==1
	printf("\r\nrecv: ");
#endif	//if DEBUG_VISCA==1
	while (HAL_GetTick() < timer) {
		if (HAL_UART_Receive(iface->port_fd, &iface->ibuf[pos], 1, 1) == HAL_OK) {
#if DEBUG_VISCA==1
			printf("[%02X]", iface->ibuf[pos]);
#endif	//if DEBUG_VISCA==1

			if (iface->ibuf[pos] == VISCA_TERMINATOR)
				break;
			else {
				if (++pos >= VISCA_INPUT_BUFFER_SIZE)
					return VISCA_FAILURE;
			}
		}
#if VISCA_USE_RTOS==1
		osThreadYield();
#endif	//if VISCA_USE_RTOS==1

	}
	iface->bytes = pos + 1;

	if (HAL_GetTick() >= timer) {
		printf("timeout\r\n");
		return VISCA_FAILURE;
	}
	else {
		printf("\r\n");
		return VISCA_SUCCESS;
	}
}

uint32_t VISCA_unread_bytes(VISCAInterface_t *iface, unsigned char *buffer, uint32_t *buffer_size)
{
	// TODO
	*buffer_size = 0;
	return VISCA_SUCCESS;
}

